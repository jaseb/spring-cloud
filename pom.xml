<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>jp.bikon</groupId>
    <artifactId>spring-cloud</artifactId>
    <packaging>pom</packaging>
    <version>0.2.0-SNAPSHOT</version>
    <name>Spring Cloud Example</name>
    <description>Spring Cloud (Netflix OSS) example</description>
    <url>https://github.com/jaseb/spring-cloud</url>

    <scm>
        <url>https://github.com/jaseb/spring-cloud</url>
        <connection>scm:git:git@github.com/jaseb/spring-cloud.git</connection>
        <developerConnection>scm:git:git@github.com:jaseb/spring-cloud.git
        </developerConnection>
      <tag>HEAD</tag>
  </scm>

    <issueManagement>
        <url>https://github.com/jaseb/spring-cloud/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
    </properties>

    <modules>
        <module>example-application</module>
    </modules>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <!--
                  By default, Maven will attempt to deploy the artifact to a
                  repository such as Maven Central, or a local repository.
                  If you only want to release the code (eg. to GitHub), set the
                  goal to 'install'. Default value is 'deploy'.
                  Alternatively, use the following command line option:
                  mvn release:perform -Darguments="-Dmaven.deploy.skip=true"
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <goals>install</goals>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
